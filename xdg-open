#!/usr/bin/perl

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use strict;
use warnings;
use File::MimeInfo;

my $CONF_HOME;
$ENV{'XDG_CONFIG_HOME'}
    ? $CONF_HOME = $ENV{'XDG_CONFIG_HOME'}
    : $CONF_HOME = "$ENV{'HOME'}/.config";
$CONF_HOME .= '/busking/busking.conf';
my $CONF_ETC = '/etc/xdg/busking/busking.conf';

unless (@ARGV) {
    print "usage: xdg-open [file|directory|protocol]\n";
    exit 1;
}

my $arg = $ARGV[0]; $arg = $1 if $arg =~ m|^file://(.*)|;
my $arg_mime = mimetype($arg) if -e $arg;
my ($app, @conf, $terminal);

my $config;
GET_CONF: {
    for my $file ($CONF_HOME, $CONF_ETC) {
        next unless -f $file;
        open($config, '<', $file)
            or die "could not open $file: $!\n";
        last GET_CONF;
    }
    die "error: busking.conf not found\n";
}

while (my $line = <$config>) {
    next if $line =~ /^#/;
    if ($line =~ /^terminal\s*=\s*(.+)/) {
        $terminal = $1;
        $terminal = $ENV{"$1"} if $terminal =~ /^\$(.+)/;
    }
    elsif ($line =~ m|^@\s*(.+[^\s])\s*=\s*(.+)|) {
        my $a = $2;
        $app = $a if $arg =~ m|$1|;
    }
    elsif ($arg_mime && $line =~ m|^(.+[^\s])\s*=\s*(.+)|) {
        my $a = $2;
        $app = $a if $arg_mime =~ m|$1|;
    }
    last if $app;
}

if ($app) {
    my @app = split /\s*->\s*/, $app;
    $app[0] = $ENV{"$1"} if $app[0] =~ /^\$(.+)/;
    if ($app[1]) {
        if (qx(ps -o stat= -p \$PPID) =~ /^S/
            and qx(ps -o stat= -p \$\$) !~ /\+/) {
            die "error: no terminal specified\n" unless $terminal;
            exec("$terminal -e $app[0] '$arg' &");
        }
        else {
            exec("$app[0] '$arg'");
        }
    }
    else {
        exec("$app[0] '$arg' &> /dev/null &");
    }
}
else {
    exit 2;
}
